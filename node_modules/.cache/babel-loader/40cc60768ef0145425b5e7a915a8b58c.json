{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/admin-pc/Desktop/vEngage/SHUBHAM/opterInterface_10th_jan_2021/shubham_operator_interface2021/src/OrderDetails/Forms/OrderDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./CallHistoryOrderForm.css\";\n\nconst OrderDetails = props => {\n  _s();\n\n  const [disabled, setDisabled] = useState(false);\n  const [nameColor, setNameColor] = useState(false);\n  const [orderSaved, setOrderSaved] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState(false); // local order details store\n\n  const [orderObj, setOrderObj] = useState({\n    modality: \"\",\n    bodypart: \"\",\n    schedule_datetime: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    DOB: \"\",\n    comment: \"\",\n    callStatus: \"\",\n    contact: \"\",\n    time: \"\",\n    CallStatusCode: \"\",\n    Operator_Feedback: \"\",\n    status_updated_by_AI: \"\",\n    startDate: \"\",\n    Order_Id: \"\",\n    ToOperator: \"No\",\n    time: \"\",\n    SaveClicked: false,\n    SelectStatus: false,\n    PostError: false\n  }); // console.log(\"Local State\", orderObj);\n  // using useEffect to reset useState\n\n  const testCallback = useCallback(() => {\n    setDisabled(false);\n    setNameColor(false);\n    setOrderSaved(false);\n    setError(false);\n    setUploading(false);\n  }, [props.convid]);\n  useEffect(() => {\n    testCallback();\n  }, [props.convid]); //************************************************ */\n  // this useEffect run when page render and get data from API for unique conversation ID\n\n  useEffect(async () => {\n    try {\n      console.log(\"conversationid\", props.convid);\n      const token = await props.getTokenFunc();\n      let orderData = null;\n\n      if (props.recordsLoading) {\n        setOrderObj({ ...orderObj,\n          modality: \"\",\n          bodypart: \"\",\n          schedule_datetime: \"\",\n          first_name: \"\",\n          last_name: \"\",\n          DOB: \"\",\n          feedback: \"\",\n          callstatus: \"\",\n          comment: \"\",\n          contact: \"\",\n          time: \"\",\n          CallStatusCode: \"\",\n          Operator_Feedback: \"\",\n          status_updated_by_AI: \"\",\n          startDate: \"\",\n          Order_Id: \"\",\n          ToOperator: \"No\"\n        });\n      } else {\n        if (props.convid) {\n          orderData = await fetch(process.env.REACT_APP_API_URL + \"/oi/api/v1/cart/\" + props.convid, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }).then(response => response.json()).then(data => {\n            displayOrderData(data, props.convid);\n          });\n        }\n      }\n    } catch (err) {\n      console.log(\"Error\", err);\n    }\n  }, [props.convid]); //********************************************************/\n  // this useEffect run  display live order\n\n  useEffect(() => {\n    displayLiveOrderData(props.convid, props.fetchedLiveOrder);\n  }, [props.fetchedLiveOrder, props.convid]);\n\n  const displayLiveOrderData = (conversationID, LiveOrderData) => {\n    if (conversationID === LiveOrderData.conversation_id) {\n      displayOrderData(LiveOrderData, conversationID);\n    }\n  }; //*************************************************** */\n  // this function set data from database to local state (orderObj)\n\n\n  const displayOrderData = (data, convid) => {\n    console.log(\"My order data\", data); // converting null to \"\"\n\n    Object.keys(data).forEach(function (key) {\n      if (data[key] === null || data[key] === \"None\" || typeof data[key] === \"undefined\") {\n        data[key] = \"\";\n      }\n    });\n    let appntDate = data.schedule_datetime;\n    var options = {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      day: \"short\",\n      month: \"short\",\n      year: \"numeric\"\n    };\n\n    if (appntDate !== \"\") {\n      appntDate = appntDate.toLocaleString(\"en-US\", options);\n    }\n\n    let AppointMentDate = data.appointment_datetime.split(\" \");\n\n    const Time = t => {\n      var [h, m] = t.split(\":\");\n      let time = (h % 12 + 12 * (h % 12 == 0) + \":\" + m, h >= 12 ? \"PM\" : \"AM\");\n      return `${h}:${m} ${time}`;\n    };\n\n    let Appoint_time = data.schedule_datetime ? Time(AppointMentDate[1]) : \" \";\n    setOrderObj({ ...orderObj,\n      modality: data.modality,\n      bodypart: data.bodypart,\n      schedule_datetime: AppointMentDate[0],\n      first_name: data.first_name,\n      last_name: data.last_name,\n      DOB: data.date_of_birth,\n      callStatus: data[\"call_status\"],\n      Operator_Feedback: data[\"operator_feedback\"],\n      contact: data[\"mobile_number\"],\n      status_updated_by_AI: data.status_updated_by_AI,\n      comment: data.feedback,\n      CallStatusCode: data[\"operator_feedback\"][\"operator_feedback\"],\n      time: Appoint_time\n    });\n  };\n\n  let CallCode = \"\";\n\n  if (orderObj.callStatus.length) {\n    CallCode = orderObj.callStatus[0].operator_feedback;\n  } // updating order Data\n\n\n  const orderHandler = event => {\n    event.preventDefault();\n    let conversation_id = props.convid;\n    let AppntDate = orderObj.schedule_datetime;\n    let DateAppoint = AppntDate.split(\"-\");\n    let timeCheck = orderObj.time.split(\" \");\n    let Appointmentdate = null;\n\n    if (timeCheck.length < 3) {\n      Appointmentdate = DateAppoint[2] + \"-\" + DateAppoint[0] + \"-\" + DateAppoint[1] + \" \" + timeCheck[0] + \":\" + \"00\";\n    } else {\n      Appointmentdate = DateAppoint[2] + \"-\" + DateAppoint[0] + \"-\" + DateAppoint[1] + \" \" + AppntDate[1];\n    }\n\n    const orderData = {\n      conversation_id: conversation_id,\n      modality: orderObj.modality,\n      bodypart: orderObj.bodypart,\n      schedule_datetime: orderObj.schedule_datetime != \"\" ? Appointmentdate : \"\",\n      last_name: orderObj.last_name,\n      first_name: orderObj.first_name,\n      DOB: orderObj.DOB,\n      feedback: orderObj.comment,\n      callstatus: orderObj.CallStatusCode == \"--Select--\" ? \"\" : orderObj.CallStatusCode,\n      mobile_number: orderObj.contact,\n      ris_code: orderObj.Order_Id\n    };\n    console.log(\"SENTDATA\", orderData);\n    UpdateOrderdata(orderData);\n  }; //************************************************** */\n\n\n  const UpdateOrderdata = async orderData => {\n    setUploading(true);\n    const token = await props.getTokenFunc();\n\n    if (props.convid != \"\") {\n      fetch(process.env.REACT_APP_API_URL + \"/oi/api/v1/updateorderdetails\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(orderData)\n      }).then(response => response.text()).then(data => {\n        setUploading(false);\n        console.log(\"RESPONSE DATA\", data);\n\n        if (data == 200) {\n          setOrderSaved(true);\n          props.OngoingCallPass(true); // for color change\n        }\n\n        ActionMsg(data);\n      }).catch(err => {\n        FailureMsg();\n        setError(true);\n        setOrderObj({ ...orderObj,\n          PostError: true\n        });\n        setOrderObj({ ...orderObj,\n          SaveClicked: false\n        });\n      });\n    } else {\n      console.log(\"Empty\");\n    }\n  };\n\n  const ActionMsg = orderupdatedatastatus => {\n    setDisabled(true);\n  };\n\n  const FailureMsg = () => {\n    alert(\"Data Updation Failed\");\n  };\n\n  const EditForm = () => {\n    setDisabled(false);\n  };\n\n  const inputChangedHandler = (event, inputIdentifier) => {\n    setOrderObj({ ...orderObj,\n      [inputIdentifier]: event.target.value\n    });\n  };\n\n  console.log(\"Order object \", orderObj); // for name confirmation\n\n  if (orderObj.CallStatusCode == \"1004\") {\n    const NameConfirmationHandler = async () => {\n      const token = await props.getTokenFunc();\n\n      if (props.convid !== \"\") {\n        fetch(`${process.env.REACT_APP_API_URL}/oi/api/v1/name-confirmation`, {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            conversation_id: props.convid,\n            status_code: 1004\n          }),\n          redirect: \"follow\"\n        }).then(response => {\n          setNameColor(true);\n        }).catch(err => alert(\"ERROR OCCURED IN SENDING MESSAGE!\", err));\n      }\n    };\n\n    NameConfirmationHandler();\n  }\n\n  let DataStatus = () => {\n    if (!error) {\n      if (!uploading && !orderSaved) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Please Submit your Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 16\n        }, this);\n      } else if (uploading && !orderSaved) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Saving Order...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 16\n        }, this);\n      } else if (!uploading && orderSaved) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \" Order Saved ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 16\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \" Order Saved Again ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 16\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \" Failed to Save Order Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  console.log(\"status Code \", orderObj.CallStatusCode);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"orderdetails\",\n      onSubmit: orderHandler,\n      style: {\n        width: \"23vw\",\n        // flexGrow: 1,\n        padding: \"5px\",\n        border: \"1px solid black\",\n        boxSizing: \"border-box\",\n        backgroundColor: \"#F1F1F1\",\n        height: \"90vh\" // display: \"flex\",\n        // flexDirection: \"column\",\n\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          style: {\n            fontSize: \"20px\"\n          },\n          children: \"Order Details \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\" // justifyContent: \"center\",\n\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginRight: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Modality\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              textTransform: \"uppercase\",\n              width: \"100px\"\n            },\n            label: \"Modality\",\n            elementType: \"input\",\n            type: \"text\",\n            value: orderObj.modality,\n            name: \"modality\",\n            onChange: event => inputChangedHandler(event, \"modality\"),\n            placeholder: \"Ex.MRI\",\n            onkeypress: \"this.style.width = ((this.value.length + 1) * 8) + 'px';\"\n          }, \"modality\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Body Part\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              textTransform: \"capitalize\"\n            },\n            label: \"Body Part\",\n            elementType: \"input\",\n            type: \"text\",\n            name: \"bodypart\",\n            value: orderObj.bodypart,\n            onChange: event => inputChangedHandler(event, \"bodypart\"),\n            placeholder: \"chest\"\n          }, \"bodypart\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          marginBottom: \"5px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"flex-start\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Appointment Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"appointment\",\n            type: \"text\",\n            id: \"meeting-time\",\n            name: \"meeting-time\",\n            value: orderObj.schedule_datetime,\n            onChange: event => {\n              inputChangedHandler(event, \"schedule_datetime\");\n            },\n            placeholder: \"mm-dd-yyyy\",\n            style: {\n              fontSize: \"16px\",\n              marginRight: \"10px\",\n              width: \"110px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"time\",\n            type: \"text\",\n            value: orderObj.time,\n            style: {\n              width: \"90px\",\n              paddingLeft: \"5px\"\n            },\n            onChange: event => {\n              inputChangedHandler(event, \"time\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          marginBottom: \"5px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            marginBottom: \"10px\" // justifyContent: \"center\",\n\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                width: \"100px\"\n              },\n              children: \"FirstName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              label: \"Given name\",\n              elementType: \"input\",\n              name: \"first_name\",\n              type: \"text\",\n              value: orderObj.first_name,\n              onChange: event => {\n                inputChangedHandler(event, \"first_name\");\n              },\n              placeholder: \"Ex. Clinton\",\n              style: {\n                width: \"90%\",\n                fontSize: \"16px\",\n                marginRight: \"0px\"\n              }\n            }, \"givenname\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"LastName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              label: \"Surname\",\n              elementType: \"input\",\n              name: \"last_name\",\n              type: \"text\",\n              value: orderObj.last_name,\n              onChange: event => {\n                inputChangedHandler(event, \"last_name\");\n              },\n              placeholder: \"Ex. Marx\",\n              style: {\n                width: \"90%\",\n                fontSize: \"16px\"\n              }\n            }, \"surname\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            // justifyContent: \"center\",\n            alignItems: \"center\",\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginRight: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"DOB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              label: \"DOB\",\n              elementType: \"input\",\n              name: \"DOB\",\n              type: \"date\",\n              value: orderObj.DOB,\n              onChange: event => {\n                inputChangedHandler(event, \"DOB\");\n              },\n              placeholder: \"Jan-4-1997\",\n              style: {\n                width: \"130px\"\n              }\n            }, \"dob\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              label: \"Contact\",\n              elementType: \"input\",\n              name: \"contact\",\n              type: \"text\",\n              value: orderObj.contact,\n              onChange: event => {\n                inputChangedHandler(event, \"contact\");\n              },\n              placeholder: \"Contact\",\n              style: {\n                width: \"111px\",\n                fontSize: \"15px\"\n              }\n            }, \"contact_details\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          marginBottom: \"5px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this), orderObj.status_updated_by_AI == \"IN_PROGRESS\" ? /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Callstatus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          required: true,\n          value: orderObj.CallStatusCode,\n          name: \"CallStatusCode\",\n          onChange: event => {\n            inputChangedHandler(event, \"CallStatusCode\");\n          },\n          style: {\n            padding: \"10px\",\n            outline: \"none\",\n            width: \"100%\",\n            fontSize: \"16px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \" --Select--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this), orderObj.callStatus.length != 0 && orderObj.callStatus.map(feedbackOption => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: feedbackOption.operator_feedback,\n            children: feedbackOption.operator_feedback_english\n          }, feedbackOption.operator_feedback, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 19\n          }, this))]\n        }, \"CallStatusCode\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            marginBottom: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"\",\n          marginBottom: \"3px\"\n        },\n        children: CallCode == \"3001\" || CallCode == \"2001\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Appointment Booked \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: \"right\",\n              marginRight: \"50px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"yes\",\n              name: \"Yes\",\n              value: \"Yes\",\n              onChange: event => {\n                inputChangedHandler(event, \"ToOperator\");\n              },\n              style: {\n                width: \"20px\",\n                padding: \"20px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"Yes\",\n              style: {\n                fontSize: \"16px\"\n              },\n              style: {\n                marginRight: \"10px\",\n                fontSize: \"16px\"\n              },\n              children: \"Y\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"No\",\n              name: \"Yes\",\n              value: \"No\",\n              onChange: event => {\n                inputChangedHandler(event, \"ToOperator\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"No\",\n              style: {\n                fontSize: \"16px\"\n              },\n              children: \"N\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"\"\n        },\n        children: orderObj.ToOperator == \"Yes\" && (CallCode == \"3001\" || CallCode == \"2001\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginRight: \"5px\"\n            },\n            children: \"RIS Order ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"text\",\n            value: orderObj.Order_Id,\n            onChange: event => {\n              inputChangedHandler(event, \"Order_Id\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"\"\n        },\n        children: CallCode == \"1001\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginRight: \"5px\"\n            },\n            children: \"RIS Order ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"text\",\n            value: orderObj.Order_Id,\n            onChange: event => {\n              inputChangedHandler(event, \"Order_Id\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginRight: \"10px\"\n          },\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          label: \"Comment\",\n          elementType: \"comment\",\n          name: \"comment\",\n          value: orderObj.comment,\n          onChange: event => {\n            inputChangedHandler(event, \"comment\");\n          },\n          placeholder: \"My Comments... \",\n          style: {\n            width: \"100%\",\n            height: \"80px\",\n            fontSize: \"16px\",\n            outline: \"none\"\n          }\n        }, \"comment\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\" // disabled={orderSaved}\n          ,\n          style: {\n            padding: \"10px\",\n            paddingLeft: \"20px\",\n            paddingRight: \"20px\",\n            outline: \"none !important\",\n            borderRadius: \"10px\",\n            backgroundColor: \"#FF4D4D\",\n            outline: \"none\",\n            margin: \"10px\",\n            color: \"white\"\n          } // onClick={orderHandler}\n          ,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DataStatus, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\",\n          color: \"grey\"\n        },\n        children: [\"Note:- CallStatus is always\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"Required!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(OrderDetails, \"g1iP7YjUal8Ppy+kQtAmIo6TVzY=\");\n\n_c = OrderDetails;\nexport default OrderDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderDetails\");","map":{"version":3,"sources":["/home/admin-pc/Desktop/vEngage/SHUBHAM/opterInterface_10th_jan_2021/shubham_operator_interface2021/src/OrderDetails/Forms/OrderDetails.js"],"names":["React","useState","useEffect","useCallback","OrderDetails","props","disabled","setDisabled","nameColor","setNameColor","orderSaved","setOrderSaved","uploading","setUploading","error","setError","orderObj","setOrderObj","modality","bodypart","schedule_datetime","first_name","last_name","DOB","comment","callStatus","contact","time","CallStatusCode","Operator_Feedback","status_updated_by_AI","startDate","Order_Id","ToOperator","SaveClicked","SelectStatus","PostError","testCallback","convid","console","log","token","getTokenFunc","orderData","recordsLoading","feedback","callstatus","fetch","process","env","REACT_APP_API_URL","headers","Authorization","then","response","json","data","displayOrderData","err","displayLiveOrderData","fetchedLiveOrder","conversationID","LiveOrderData","conversation_id","Object","keys","forEach","key","appntDate","options","hour","minute","day","month","year","toLocaleString","AppointMentDate","appointment_datetime","split","Time","t","h","m","Appoint_time","date_of_birth","CallCode","length","operator_feedback","orderHandler","event","preventDefault","AppntDate","DateAppoint","timeCheck","Appointmentdate","mobile_number","ris_code","UpdateOrderdata","method","Accept","body","JSON","stringify","text","OngoingCallPass","ActionMsg","catch","FailureMsg","orderupdatedatastatus","alert","EditForm","inputChangedHandler","inputIdentifier","target","value","NameConfirmationHandler","status_code","redirect","DataStatus","textAlign","width","padding","border","boxSizing","backgroundColor","height","display","justifyContent","fontSize","marginRight","textTransform","marginBottom","flexDirection","alignItems","paddingLeft","outline","map","feedbackOption","operator_feedback_english","float","paddingRight","borderRadius","margin","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nimport \"./CallHistoryOrderForm.css\";\n\nconst OrderDetails = (props) => {\n  const [disabled, setDisabled] = useState(false);\n  const [nameColor, setNameColor] = useState(false);\n  const [orderSaved, setOrderSaved] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState(false);\n\n  // local order details store\n\n  const [orderObj, setOrderObj] = useState({\n    modality: \"\",\n    bodypart: \"\",\n    schedule_datetime: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    DOB: \"\",\n    comment: \"\",\n    callStatus: \"\",\n    contact: \"\",\n    time: \"\",\n    CallStatusCode: \"\",\n    Operator_Feedback: \"\",\n    status_updated_by_AI: \"\",\n    startDate: \"\",\n    Order_Id: \"\",\n    ToOperator: \"No\",\n    time: \"\",\n    SaveClicked: false,\n    SelectStatus: false,\n    PostError: false,\n  });\n\n  // console.log(\"Local State\", orderObj);\n  // using useEffect to reset useState\n  const testCallback = useCallback(() => {\n    setDisabled(false);\n    setNameColor(false);\n    setOrderSaved(false);\n    setError(false);\n    setUploading(false);\n  }, [props.convid]);\n  useEffect(() => {\n    testCallback();\n  }, [props.convid]);\n\n  //************************************************ */\n  // this useEffect run when page render and get data from API for unique conversation ID\n\n  useEffect(async () => {\n    try {\n      console.log(\"conversationid\", props.convid);\n      const token = await props.getTokenFunc();\n      let orderData = null;\n      if (props.recordsLoading) {\n        setOrderObj({\n          ...orderObj,\n          modality: \"\",\n          bodypart: \"\",\n          schedule_datetime: \"\",\n          first_name: \"\",\n          last_name: \"\",\n          DOB: \"\",\n          feedback: \"\",\n          callstatus: \"\",\n          comment: \"\",\n          contact: \"\",\n          time: \"\",\n          CallStatusCode: \"\",\n          Operator_Feedback: \"\",\n          status_updated_by_AI: \"\",\n          startDate: \"\",\n          Order_Id: \"\",\n          ToOperator: \"No\",\n        });\n      } else {\n        if (props.convid) {\n          orderData = await fetch(\n            process.env.REACT_APP_API_URL + \"/oi/api/v1/cart/\" + props.convid,\n            {\n              headers: {\n                Authorization: `Bearer ${token}`,\n              },\n            }\n          )\n            .then((response) => response.json())\n            .then((data) => {\n              displayOrderData(data, props.convid);\n            });\n        }\n      }\n    } catch (err) {\n      console.log(\"Error\", err);\n    }\n  }, [props.convid]);\n\n  //********************************************************/\n  // this useEffect run  display live order\n\n  useEffect(() => {\n    displayLiveOrderData(props.convid, props.fetchedLiveOrder);\n  }, [props.fetchedLiveOrder, props.convid]);\n\n  const displayLiveOrderData = (conversationID, LiveOrderData) => {\n    if (conversationID === LiveOrderData.conversation_id) {\n      displayOrderData(LiveOrderData, conversationID);\n    }\n  };\n\n  //*************************************************** */\n\n  // this function set data from database to local state (orderObj)\n  const displayOrderData = (data, convid) => {\n    console.log(\"My order data\", data);\n    // converting null to \"\"\n    Object.keys(data).forEach(function (key) {\n      if (\n        data[key] === null ||\n        data[key] === \"None\" ||\n        typeof data[key] === \"undefined\"\n      ) {\n        data[key] = \"\";\n      }\n    });\n\n    let appntDate = data.schedule_datetime;\n    var options = {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      day: \"short\",\n      month: \"short\",\n      year: \"numeric\",\n    };\n    if (appntDate !== \"\") {\n      appntDate = appntDate.toLocaleString(\"en-US\", options);\n    }\n\n    let AppointMentDate = data.appointment_datetime.split(\" \");\n    const Time = (t) => {\n      var [h, m] = t.split(\":\");\n      let time =\n        ((h % 12) + 12 * (h % 12 == 0) + \":\" + m, h >= 12 ? \"PM\" : \"AM\");\n\n      return `${h}:${m} ${time}`;\n    };\n    let Appoint_time = data.schedule_datetime ? Time(AppointMentDate[1]) : \" \";\n\n    setOrderObj({\n      ...orderObj,\n      modality: data.modality,\n      bodypart: data.bodypart,\n      schedule_datetime: AppointMentDate[0],\n      first_name: data.first_name,\n      last_name: data.last_name,\n      DOB: data.date_of_birth,\n      callStatus: data[\"call_status\"],\n      Operator_Feedback: data[\"operator_feedback\"],\n      contact: data[\"mobile_number\"],\n      status_updated_by_AI: data.status_updated_by_AI,\n      comment: data.feedback,\n      CallStatusCode: data[\"operator_feedback\"][\"operator_feedback\"],\n      time: Appoint_time,\n    });\n  };\n\n  let CallCode = \"\";\n\n  if (orderObj.callStatus.length) {\n    CallCode = orderObj.callStatus[0].operator_feedback;\n  }\n\n  // updating order Data\n\n  const orderHandler = (event) => {\n    event.preventDefault();\n\n    let conversation_id = props.convid;\n\n    let AppntDate = orderObj.schedule_datetime;\n    let DateAppoint = AppntDate.split(\"-\");\n    let timeCheck = orderObj.time.split(\" \");\n    let Appointmentdate = null;\n    if (timeCheck.length < 3) {\n      Appointmentdate =\n        DateAppoint[2] +\n        \"-\" +\n        DateAppoint[0] +\n        \"-\" +\n        DateAppoint[1] +\n        \" \" +\n        timeCheck[0] +\n        \":\" +\n        \"00\";\n    } else {\n      Appointmentdate =\n        DateAppoint[2] +\n        \"-\" +\n        DateAppoint[0] +\n        \"-\" +\n        DateAppoint[1] +\n        \" \" +\n        AppntDate[1];\n    }\n\n    const orderData = {\n      conversation_id: conversation_id,\n      modality: orderObj.modality,\n      bodypart: orderObj.bodypart,\n\n      schedule_datetime:\n        orderObj.schedule_datetime != \"\" ? Appointmentdate : \"\",\n      last_name: orderObj.last_name,\n      first_name: orderObj.first_name,\n      DOB: orderObj.DOB,\n      feedback: orderObj.comment,\n      callstatus:\n        orderObj.CallStatusCode == \"--Select--\" ? \"\" : orderObj.CallStatusCode,\n      mobile_number: orderObj.contact,\n      ris_code: orderObj.Order_Id,\n    };\n\n    console.log(\"SENTDATA\", orderData);\n    UpdateOrderdata(orderData);\n  };\n\n  //************************************************** */\n  const UpdateOrderdata = async (orderData) => {\n    setUploading(true);\n    const token = await props.getTokenFunc();\n    if (props.convid != \"\") {\n      fetch(process.env.REACT_APP_API_URL + \"/oi/api/v1/updateorderdetails\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(orderData),\n      })\n        .then((response) => response.text())\n        .then((data) => {\n          setUploading(false);\n          console.log(\"RESPONSE DATA\", data);\n          if (data == 200) {\n            setOrderSaved(true);\n            props.OngoingCallPass(true); // for color change\n          }\n\n          ActionMsg(data);\n        })\n        .catch((err) => {\n          FailureMsg();\n          setError(true);\n          setOrderObj({ ...orderObj, PostError: true });\n          setOrderObj({ ...orderObj, SaveClicked: false });\n        });\n    } else {\n      console.log(\"Empty\");\n    }\n  };\n  const ActionMsg = (orderupdatedatastatus) => {\n    setDisabled(true);\n  };\n\n  const FailureMsg = () => {\n    alert(\"Data Updation Failed\");\n  };\n  const EditForm = () => {\n    setDisabled(false);\n  };\n  const inputChangedHandler = (event, inputIdentifier) => {\n    setOrderObj({\n      ...orderObj,\n      [inputIdentifier]: event.target.value,\n    });\n  };\n\n  console.log(\"Order object \", orderObj);\n\n  // for name confirmation\n  if (orderObj.CallStatusCode == \"1004\") {\n    const NameConfirmationHandler = async () => {\n      const token = await props.getTokenFunc();\n      if (props.convid !== \"\") {\n        fetch(`${process.env.REACT_APP_API_URL}/oi/api/v1/name-confirmation`, {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n          body: JSON.stringify({\n            conversation_id: props.convid,\n            status_code: 1004,\n          }),\n          redirect: \"follow\",\n        })\n          .then((response) => {\n            setNameColor(true);\n          })\n          .catch((err) => alert(\"ERROR OCCURED IN SENDING MESSAGE!\", err));\n      }\n    };\n\n    NameConfirmationHandler();\n  }\n\n  let DataStatus = () => {\n    if (!error) {\n      if (!uploading && !orderSaved) {\n        return <p style={{ textAlign: \"center\" }}>Please Submit your Order</p>;\n      } else if (uploading && !orderSaved) {\n        return <p style={{ textAlign: \"center\" }}>Saving Order...</p>;\n      } else if (!uploading && orderSaved) {\n        return <p style={{ textAlign: \"center\" }}> Order Saved ...</p>;\n      } else {\n        return <p style={{ textAlign: \"center\" }}> Order Saved Again ...</p>;\n      }\n    } else {\n      return (\n        <p style={{ textAlign: \"center\" }}> Failed to Save Order Details</p>\n      );\n    }\n  };\n\n  console.log(\"status Code \", orderObj.CallStatusCode);\n\n  return (\n    <>\n      <form\n        className=\"orderdetails\"\n        onSubmit={orderHandler}\n        style={{\n          width: \"23vw\",\n          // flexGrow: 1,\n          padding: \"5px\",\n          border: \"1px solid black\",\n          boxSizing: \"border-box\",\n          backgroundColor: \"#F1F1F1\",\n          height: \"90vh\",\n          // display: \"flex\",\n          // flexDirection: \"column\",\n        }}\n      >\n        <h4 style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <u style={{ fontSize: \"20px\" }}>Order Details </u>\n        </h4>\n\n        <div\n          style={{\n            display: \"flex\",\n            // justifyContent: \"center\",\n          }}\n        >\n          <div style={{ marginRight: \"10px\" }}>\n            <p>Modality</p>\n            <input\n              style={{ textTransform: \"uppercase\", width: \"100px\" }}\n              key=\"modality\"\n              label=\"Modality\"\n              elementType=\"input\"\n              type=\"text\"\n              value={orderObj.modality}\n              name=\"modality\"\n              onChange={(event) => inputChangedHandler(event, \"modality\")}\n              placeholder=\"Ex.MRI\"\n              onkeypress=\"this.style.width = ((this.value.length + 1) * 8) + 'px';\"\n            />\n          </div>\n          <div>\n            <p>Body Part</p>\n            <input\n              style={{ textTransform: \"capitalize\" }}\n              key=\"bodypart\"\n              label=\"Body Part\"\n              elementType=\"input\"\n              type=\"text\"\n              name=\"bodypart\"\n              value={orderObj.bodypart}\n              onChange={(event) => inputChangedHandler(event, \"bodypart\")}\n              placeholder=\"chest\"\n            />\n          </div>\n        </div>\n        <hr style={{ marginBottom: \"5px\" }} />\n\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n          }}\n        >\n          <p>Appointment Date</p>\n          {/* <DatePicker\n            selected={schedule_dateti\n            onChange={(date) => setSchedule_datetime(date)}\n            timeInputLabel=\"Time:\"\n            dateFormat=\"MM/dd/yyyy h:mm aa\"\n            showTimeInput\n          /> */}\n\n          {/* <input\n            type=\"datetime-local\"\n            value={orderObj.schedule_datetime}\n            onChange={(event) => {\n              inputChangedHandler(event, \"schedule_datetime\");\n            }}\n          /> */}\n          <div style={{ display: \"flex\" }}>\n            <input\n              id=\"appointment\"\n              type=\"text\"\n              id=\"meeting-time\"\n              name=\"meeting-time\"\n              value={orderObj.schedule_datetime}\n              onChange={(event) => {\n                inputChangedHandler(event, \"schedule_datetime\");\n              }}\n              placeholder=\"mm-dd-yyyy\"\n              style={{ fontSize: \"16px\", marginRight: \"10px\", width: \"110px\" }}\n            />\n            <input\n              id=\"time\"\n              type=\"text\"\n              value={orderObj.time}\n              style={{ width: \"90px\", paddingLeft: \"5px\" }}\n              onChange={(event) => {\n                inputChangedHandler(event, \"time\");\n              }}\n            />\n          </div>\n        </div>\n\n        <hr style={{ marginBottom: \"5px\" }} />\n\n        <div className=\"user_details\">\n          <div\n            style={{\n              display: \"flex\",\n              marginBottom: \"10px\",\n              // justifyContent: \"center\",\n            }}\n          >\n            <div>\n              <p style={{ width: \"100px\" }}>FirstName</p>\n\n              <input\n                key=\"givenname\"\n                label=\"Given name\"\n                elementType=\"input\"\n                name=\"first_name\"\n                type=\"text\"\n                value={orderObj.first_name}\n                onChange={(event) => {\n                  inputChangedHandler(event, \"first_name\");\n                }}\n                placeholder=\"Ex. Clinton\"\n                style={{ width: \"90%\", fontSize: \"16px\", marginRight: \"0px\" }}\n              />\n            </div>\n            <div>\n              <p>LastName</p>\n              <input\n                key=\"surname\"\n                label=\"Surname\"\n                elementType=\"input\"\n                name=\"last_name\"\n                type=\"text\"\n                value={orderObj.last_name}\n                onChange={(event) => {\n                  inputChangedHandler(event, \"last_name\");\n                }}\n                placeholder=\"Ex. Marx\"\n                style={{ width: \"90%\", fontSize: \"16px\" }}\n              />\n            </div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              // justifyContent: \"center\",\n              alignItems: \"center\",\n              marginBottom: \"10px\",\n            }}\n          >\n            <div style={{ marginRight: \"10px\" }}>\n              <p>DOB</p>\n              <input\n                key=\"dob\"\n                label=\"DOB\"\n                elementType=\"input\"\n                name=\"DOB\"\n                type=\"date\"\n                value={orderObj.DOB}\n                onChange={(event) => {\n                  inputChangedHandler(event, \"DOB\");\n                }}\n                placeholder=\"Jan-4-1997\"\n                style={{ width: \"130px\" }}\n              />\n            </div>\n            <div>\n              <p>Contact</p>\n              <input\n                key=\"contact_details\"\n                label=\"Contact\"\n                elementType=\"input\"\n                name=\"contact\"\n                type=\"text\"\n                value={orderObj.contact}\n                onChange={(event) => {\n                  inputChangedHandler(event, \"contact\");\n                }}\n                placeholder=\"Contact\"\n                style={{ width: \"111px\", fontSize: \"15px\" }}\n              />\n            </div>\n          </div>\n        </div>\n        <hr style={{ marginBottom: \"5px\" }} />\n        {orderObj.status_updated_by_AI == \"IN_PROGRESS\" ? (\n          <p></p>\n        ) : (\n          <>\n            <p>Callstatus</p>\n\n            <select\n              required\n              key=\"CallStatusCode\"\n              value={orderObj.CallStatusCode}\n              name=\"CallStatusCode\"\n              onChange={(event) => {\n                inputChangedHandler(event, \"CallStatusCode\");\n              }}\n              style={{\n                padding: \"10px\",\n                outline: \"none\",\n                width: \"100%\",\n                fontSize: \"16px\",\n              }}\n            >\n              <option> --Select--</option>\n              {orderObj.callStatus.length != 0 &&\n                orderObj.callStatus.map((feedbackOption) => (\n                  <option\n                    key={feedbackOption.operator_feedback}\n                    value={feedbackOption.operator_feedback}\n                  >\n                    {feedbackOption.operator_feedback_english}\n                  </option>\n                ))}\n            </select>\n            <hr style={{ marginBottom: \"5px\" }} />\n          </>\n        )}\n\n        <div style={{ display: \"\", marginBottom: \"3px\" }}>\n          {CallCode == \"3001\" ||\n            (CallCode == \"2001\" && (\n              <>\n                <span>Appointment Booked </span>\n                <div\n                  style={{\n                    float: \"right\",\n                    marginRight: \"50px\",\n                  }}\n                >\n                  <input\n                    type=\"radio\"\n                    id=\"yes\"\n                    name=\"Yes\"\n                    value=\"Yes\"\n                    onChange={(event) => {\n                      inputChangedHandler(event, \"ToOperator\");\n                    }}\n                    style={{ width: \"20px\", padding: \"20px\" }}\n                  />\n                  <label\n                    for=\"Yes\"\n                    style={{ fontSize: \"16px\" }}\n                    style={{ marginRight: \"10px\", fontSize: \"16px\" }}\n                  >\n                    Y\n                  </label>\n                  <input\n                    type=\"radio\"\n                    id=\"No\"\n                    name=\"Yes\"\n                    value=\"No\"\n                    onChange={(event) => {\n                      inputChangedHandler(event, \"ToOperator\");\n                    }}\n                  />\n                  <label for=\"No\" style={{ fontSize: \"16px\" }}>\n                    N\n                  </label>\n                </div>\n              </>\n            ))}\n        </div>\n\n        <div style={{ display: \"\" }}>\n          {orderObj.ToOperator == \"Yes\" &&\n            (CallCode == \"3001\" || CallCode == \"2001\") && (\n              <>\n                <span style={{ marginRight: \"5px\" }}>RIS Order ID</span>\n                <input\n                  required\n                  type=\"text\"\n                  value={orderObj.Order_Id}\n                  onChange={(event) => {\n                    inputChangedHandler(event, \"Order_Id\");\n                  }}\n                />\n              </>\n            )}\n        </div>\n        <div style={{ display: \"\" }}>\n          {CallCode == \"1001\" && (\n            <>\n              {\" \"}\n              <span style={{ marginRight: \"5px\" }}>RIS Order ID</span>\n              <input\n                required\n                type=\"text\"\n                value={orderObj.Order_Id}\n                onChange={(event) => {\n                  inputChangedHandler(event, \"Order_Id\");\n                }}\n              />{\" \"}\n            </>\n          )}\n        </div>\n\n        <div>\n          <p style={{ marginRight: \"10px\" }}>Comments</p>\n\n          <textarea\n            key=\"comment\"\n            label=\"Comment\"\n            elementType=\"comment\"\n            name=\"comment\"\n            value={orderObj.comment}\n            onChange={(event) => {\n              inputChangedHandler(event, \"comment\");\n            }}\n            placeholder=\"My Comments... \"\n            style={{\n              width: \"100%\",\n              height: \"80px\",\n              fontSize: \"16px\",\n              outline: \"none\",\n            }}\n          />\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <button\n            type=\"submit\"\n            // disabled={orderSaved}\n            style={{\n              padding: \"10px\",\n              paddingLeft: \"20px\",\n              paddingRight: \"20px\",\n              outline: \"none !important\",\n              borderRadius: \"10px\",\n              backgroundColor: \"#FF4D4D\",\n              outline: \"none\",\n              margin: \"10px\",\n              color: \"white\",\n            }}\n            // onClick={orderHandler}\n          >\n            Save\n          </button>\n          {/* <button\n            disabled={!disabled}\n            onClick={EditForm}\n            style={{\n              padding: \"10px\",\n              paddingLeft: \"20px\",\n              paddingRight: \"20px\",\n              outline: \"none !important\",\n              backgroundColor: \"#4472C4\",\n              borderRadius: \"10px\",\n              outline: \"none\",\n              margin: \"10px\",\n              color: \"white\",\n            }}\n          >\n            Edit\n          </button> */}\n        </div>\n        <DataStatus />\n        <p style={{ textAlign: \"center\", color: \"grey\" }}>\n          Note:- CallStatus is always{\" \"}\n          <span style={{ color: \"red\" }}>Required!</span>\n        </p>\n      </form>\n\n      {/* {!nameColor ? (\n        <button\n          onClick={NameConfirmationHandler}\n          style={\n            {\n              // padding: \"10px\",\n              // paddingLeft: \"20px\",\n              // paddingRight: \"20px\",\n              // outline: \"none !important\",\n              // backgroundColor: \"#FF4D4D\",\n              // borderRadius: \"10px\",\n              // outline: \"none\",\n              // margin: \"10px\",\n            }\n          }\n        >\n          Name Confirmation\n        </button>\n      ) : (\n        <button\n          style={\n            {\n              // padding: \"10px\",\n              // paddingLeft: \"20px\",\n              // paddingRight: \"20px\",\n              // outline: \"none !important\",\n              // backgroundColor: \"#FF4D4D\",\n              // borderRadius: \"10px\",\n              // outline: \"none\",\n              // margin: \"10px\",\n            }\n          }\n        >\n          Request Sent!\n        </button>\n      )} */}\n    </>\n  );\n};\n\nexport default OrderDetails;\n"]},"metadata":{},"sourceType":"module"}